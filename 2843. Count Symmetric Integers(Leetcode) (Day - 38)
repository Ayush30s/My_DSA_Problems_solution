class Solution {
public:
    
    int countSymmetricIntegers(int low, int high) {
        int ans = 0;
        for(int i = low ; i <= high  ;i++) {
  
            string num = to_string(i);                                                        //converting int to string makes it easy to traverse from starting or ending
            if(num.size()%2 == 0) {                                                           //if the number has even number of digits then only look for it
                int fsum =0;
                int lsum =0;

                for(int i =0; i < num.size()/2; i++)                                          //calculate the sum of first n number
                    fsum = fsum + num[i]-'0';                                                 //convert char to int

                for(int j = num.size()-1 ; j >= num.size()/2 ;j--)                            //calculate the sum of last n number
                    lsum = lsum + num[j]-'0';                                                 //convert char to int

                if(lsum == fsum) 
                    ans++;
            }
        }
        return ans;
    }
};
